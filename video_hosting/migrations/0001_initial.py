# Generated by Django 4.2.4 on 2024-12-13 13:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import video_hosting.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Имя должно быть на латинице.')], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('phone', models.CharField(max_length=30, verbose_name='Телефон')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images/profile/', verbose_name='Аватар')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('facebook', models.CharField(blank=True, max_length=50, null=True)),
                ('twitter', models.CharField(blank=True, max_length=50, null=True)),
                ('instagram', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужчина'), ('F', 'Женщина')], max_length=1, null=True, verbose_name='Пол')),
                ('birdday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified')),
                ('start_month', models.DateTimeField(blank=True, null=True)),
                ('finish_month', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'unique_together': {('username', 'email', 'phone')},
            },
            managers=[
                ('objects', video_hosting.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_path', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_info', models.CharField(max_length=200)),
                ('status', models.BooleanField(default=False)),
                ('money', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FollowersCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=100, null=True)),
                ('follower', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IpModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Montaj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filemod', models.FileField(upload_to='video1/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4'])])),
            ],
        ),
        migrations.CreateModel(
            name='WalletUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('condition', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='VideoshowCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='videoshow/1cd873bd-1cff-4848-9d16-4d880cfffb79/', verbose_name='Слайдшоу')),
                ('audio', models.FileField(blank=True, null=True, upload_to='videoshow/1cd873bd-1cff-4848-9d16-4d880cfffb79/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3'])], verbose_name='Музыка')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors10', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videoshow3', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Videoshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='videoshow/095baeb2-cf41-46da-b0c0-98aa9987215e/', verbose_name='Слайдшоу')),
                ('audio', models.FileField(blank=True, null=True, upload_to='videoshow/095baeb2-cf41-46da-b0c0-98aa9987215e/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3'])], verbose_name='Музыка')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors11', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videoshow1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='video1/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'insv'])], verbose_name='Видео')),
                ('audio', models.FileField(blank=True, null=True, upload_to='video1/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3'])], verbose_name='Музыка')),
                ('start', models.IntegerField(default=0, verbose_name='С какой секунды начинаем')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('render', models.BooleanField(default=False)),
                ('authors', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, upload_to='image/', verbose_name='Обложка')),
                ('file', models.FileField(upload_to='video/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='post_views', to='video_hosting.ipmodel')),
            ],
        ),
        migrations.CreateModel(
            name='SpeedCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='speed/b1739267-629e-4bcc-82f4-51befb5eef52', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'insv'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors12', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SlowingCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='slowing/08c1e275-6f1a-4cdc-924a-75dd0adfed00', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'insv'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slowing', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SlideshowCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='skideshow/e19bdea3-03c6-436a-a0ca-f15c66be57d0/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png'])], verbose_name='Слайдшоу')),
                ('audio', models.FileField(blank=True, null=True, upload_to='skideshow/e19bdea3-03c6-436a-a0ca-f15c66be57d0/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3'])], verbose_name='Музыка')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors8', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slideshow', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slideshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='skideshow/e3972c76-184b-49c6-b6a0-c5c7ce7c351b/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Слайдшоу')),
                ('audio', models.FileField(blank=True, null=True, upload_to='skideshow/e3972c76-184b-49c6-b6a0-c5c7ce7c351b/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3'])], verbose_name='Музыка')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors9', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slideshow1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RenderCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='render/da2d14a1-eb62-4189-945e-8495f3681ccc', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'insv', 'MOV', 'MP4'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='render1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RendCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='render1/dbffd48e-df41-4e56-8cce-36fe0b0b0b77', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'insv', 'MOV', 'MP4'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='render2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReelsCreate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='reels/2ca38f41-058e-46f3-9444-cb92658b66c1/44158', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'mp4', 'mov', 'insv'])], verbose_name='Видео')),
                ('audio', models.FileField(upload_to='reels/2ca38f41-058e-46f3-9444-cb92658b66c1/44158', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'mp4', 'mov', 'insv'])], verbose_name='Музыка')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('render', models.BooleanField(default=False)),
                ('authors2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images/profile/', verbose_name='Аватар')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужчина'), ('F', 'Женщина')], max_length=1, null=True, verbose_name='Пол')),
                ('birdday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('send', 'Отправлено'), ('accepted', 'Принято'), ('declined', 'Отклонено')], default='send', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImagesCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='images_zip/6d3d98d2-3603-4768-8c06-9bd7fba1d671/28548', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'mp4', 'mov', 'insv'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('status', models.BooleanField(default=False, verbose_name='Видимость статьи')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_video', to='video_hosting.video', verbose_name='Автор')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BwCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='blackwhite/545051bd-148f-43a9-aa11-92984f62371c', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'insv'])], verbose_name='Видео')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('render', models.BooleanField(default=False)),
                ('authors4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blackwhite', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AudioCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.FileField(upload_to='audio/f547cf9e-0866-4851-8d85-190311943eb3', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'mp4'])], verbose_name='Загрузите песню')),
                ('start', models.IntegerField(verbose_name='С какой секунды начинаем')),
                ('finish', models.IntegerField(verbose_name='На какой заканчиваем')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('render', models.BooleanField(default=False)),
                ('authors1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creates1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
